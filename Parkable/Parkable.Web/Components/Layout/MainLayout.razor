@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@attribute [Authorize]

<MudThemeProvider />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar>
        <AuthorizeView>
            <MudIconButton Icon="@Icons.Material.Filled.Menu" 
                            Color="Color.Inherit" 
                            Edge="Edge.Start" 
                            OnClick="@((e) => DrawerToggle())" />
            Parkable
            <MudSpacer />
            @context.User.Identity?.Name
            <MudMenu Icon="@Icons.Material.Filled.Person" 
                        Color="Color.Inherit">
                <MudMenuItem Icon="@Icons.Material.Filled.Logout" 
                                Label="Logout" 
                                Href="/logout" />
            </MudMenu>
        </AuthorizeView>
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <NavMenu />
    </MudDrawer>
    <MudMainContent>
        <MudContainer Class="mt-6">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; }

    bool _drawerOpen = true;

    protected override async Task OnInitializedAsync()
    {
        // Get authentication state based on the cascading parameter
        var state = await AuthenticationState;

        // Redirect user to login when it's not authenticated
        if ((state.User.Identity?.IsAuthenticated ?? false) == false)
            NavigationManager.NavigateTo("/login");
    }

    private void DrawerToggle() => _drawerOpen = !_drawerOpen;
}